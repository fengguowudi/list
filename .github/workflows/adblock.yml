name: Build adblock rules files
on:
  schedule:
    - cron: 0 */6 * * *
  push:
    branches:
      - "master"
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go 1.x
        uses: actions/setup-go@v4
        with:
          go-version: "^1.14"

      - name: Set $GOPATH and more variables
        run: |
          echo "RELEASE_NAME=Released on $(date -d '8 hour' -u +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date -d '8 hour' -u +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "MODIFIED_TIME=$(date -d '8 hour' -u '+%Y年%m月%d日 %H:%M')" >> $GITHUB_ENV
          echo "EASYLIST_URL=https://easylist-downloads.adblockplus.org/easylist.txt" >> $GITHUB_ENV
          echo "EASYLISTCHINA_URL=https://easylist-downloads.adblockplus.org/easylistchina.txt" >> $GITHUB_ENV
          echo "EASYPRIVACY_URL=https://easylist-downloads.adblockplus.org/easyprivacy.txt" >> $GITHUB_ENV
          echo "CJXLIST_URL=https://raw.githubusercontent.com/cjx82630/cjxlist/master/cjxlist.txt" >> $GITHUB_ENV
          echo "CJX_ANNOYANCE_URL=https://raw.githubusercontent.com/cjx82630/cjxlist/master/cjx-annoyance.txt" >> $GITHUB_ENV
          echo "ANTI_ADBLOCK_KILLER_FILTERS_URL=https://raw.githubusercontent.com/reek/anti-adblock-killer/master/anti-adblock-killer-filters.txt" >> $GITHUB_ENV
          echo "ANTIADBLOCKFILTERS_URL=https://easylist-downloads.adblockplus.org/antiadblockfilters.txt" >> $GITHUB_ENV
          echo "ABP_FILTERS_ANTI_CV_URL=https://easylist-downloads.adblockplus.org/abp-filters-anti-cv.txt" >> $GITHUB_ENV
          echo "XINGGSF_MV_URL=https://raw.githubusercontent.com/xinggsf/Adblock-Plus-Rule/master/mv.txt" >> $GITHUB_ENV
          echo "UBLOCK_1=https://raw.githubusercontent.com/uBlockOrigin/uAssets/master/filters/filters-2021.txt" >> $GITHUB_ENV
          echo "UBLOCK_2=https://raw.githubusercontent.com/uBlockOrigin/uAssets/master/filters/badware.txt" >> $GITHUB_ENV
          echo "UBLOCK_3=https://raw.githubusercontent.com/uBlockOrigin/uAssets/master/filters/privacy.txt" >> $GITHUB_ENV
          echo "UBLOCK_4=https://raw.githubusercontent.com/uBlockOrigin/uAssets/master/filters/resource-abuse.txt" >> $GITHUB_ENV
          echo "UBLOCK_5=https://raw.githubusercontent.com/uBlockOrigin/uAssets/master/filters/unbreak.txt" >> $GITHUB_ENV
          echo "MALICIOUS=https://gitlab.com/curben/urlhaus-filter/-/raw/master/urlhaus-filter-ag-online.txt" >> $GITHUB_ENV
          echo "PETER=https://pgl.yoyo.org/adservers/serverlist.php?hostformat=hosts&showintro=1&mimetype=plaintext&_=1" >> $GITHUB_ENV
          echo "ADGUARD=https://raw.githubusercontent.com/AdguardTeam/AdguardFilters/master/ChineseFilter/sections/adservers.txt" >> $GITHUB_ENV
          echo "GOPATH=$(dirname $GITHUB_WORKSPACE)" >> $GITHUB_ENV
          echo "$(dirname $GITHUB_WORKSPACE)/bin" >> $GITHUB_PATH
        shell: bash

      - name: Checkout the "master" branch
        uses: actions/checkout@v4
        with:
          ref: master

      - name: Get every files
        id: download
        run: |
          mkdir -p ./download/
          cd ./download
          curl -sSL $ADGUARD | sed -e '/^! /d' -e '1c ! Adguard' -e '/^!$/d' -e '/The End/d'  -e '/^$/d' > ./adguard.txt
          curl -sSL $PETER | sed -e '/^! /d' -e '1c ! Peter' -e '/^!$/d' -e '/The End/d'  -e '/^$/d' > ./peter.txt
          curl -sSL $MALICIOUS | sed -e '/^! /d' -e '1c ! Malicious' -e '/^!$/d' -e '/The End/d'  -e '/^$/d' > ./malicious.txt
          curl -sSL $UBLOCK_1 | sed -e '/^! /d' -e '1c ! Ublock' -e '/^!$/d' -e '/The End/d'  -e '/^$/d' > ./ublock.txt
          curl -sSL $UBLOCK_2 | sed -e '/^! /d' -e '1c ! Ublock2' -e '/^!$/d' -e '/The End/d'  -e '/^$/d' > ./ublock2.txt
          curl -sSL $UBLOCK_3 | sed -e '/^! /d' -e '1c ! Ublock3' -e '/^!$/d' -e '/The End/d'  -e '/^$/d' > ./ublock3.txt
          curl -sSL $UBLOCK_4 | sed -e '/^! /d' -e '1c ! Ublock4' -e '/^!$/d' -e '/The End/d'  -e '/^$/d' > ./ublock4.txt
          curl -sSL $UBLOCK_5 | sed -e '/^! /d' -e '1c ! Ublock5' -e '/^!$/d' -e '/The End/d'  -e '/^$/d' > ./ublock5.txt
          curl -sSL $EASYLIST_URL | sed -e '/^! /d' -e '1c ! EasyList' -e '/^!$/d' -e '/The End/d'  -e '/^$/d' > ./easylist.txt
          curl -sSL $EASYLISTCHINA_URL | sed -e '/^! /d' -e '1c ! EasyList China' -e '/^!$/d' -e '/The End/d'  -e '/^$/d' > ./easylistchina.txt
          curl -sSL $EASYPRIVACY_URL | sed -e '/^! /d' -e '1c ! EasyPrivacy' -e '/^!$/d' > ./easyprivacy.txt
          curl -sSL $CJXLIST_URL | sed -e '/^! /d' -e '1c ! EasyList Lite' -e '/^!$/d' -e '/The End/d'  -e '/^$/d' > ./cjxlist.txt
          curl -sSL $CJX_ANNOYANCE_URL | sed -e '/^! /d' -e "1c ! CJX's Annoyance List" -e '/^!$/d' -e '/The End/d'  -e '/^$/d' | sed '/热门话题/,+1d' > ./cjx-annoyance.txt
          sed -i '/!#include cjx-ublock.txt/c !#include https://gitee.com/cjx82630/cjxlist/raw/master/cjx-ublock.txt' ./cjx-annoyance.txt
          curl -sSL $XINGGSF_MV_URL | sed '/禁止站内新开窗/,+2d' | sed -e '/^! /d' -e '1c ! 乘风 视频广告过滤规则' -e '/^!$/d' -e '/^$/d' > ./xinggsf-mv.txt
          curl -sSL $ANTIADBLOCKFILTERS_URL | sed -e '1c ! Adblock Warning Removal List' -e '/^! Checksum/,/! Please check our guidelines/d' -e '/^!$/d' -e '/The End/d'  -e '/^$/d' > ./antiadblockfilters.txt
          curl -sSL $ABP_FILTERS_ANTI_CV_URL | sed -e '1c ! abp-filters-anti-cv' -e '/^! Checksum/,/adblockplus.org/d' -e '/^!$/d' -e '/The End/d'  -e '/^$/d' > ./abp-filters-anti-cv.txt
          curl -sSL $ANTI_ADBLOCK_KILLER_FILTERS_URL | sed -e '1c ! AakList (Anti-Adblock Killer)' -e '/^! Title/,/^! RegExpVisualizer/d' -e '/^!$/d' -e '/The End/d'  -e '/^$/d' > ./anti-adblock-killer-filters.txt
          for i in $(ls *.txt); do
            if [[ `cat $i |wc -l` -eq 0 ]]; then
              echo "status=failed" >> $GITHUB_ENV
              break
            else
              echo "status=success" >> $GITHUB_ENV
              echo "" >> $i
            fi
          done

      - name: Generate adblock files
        if: env.status == 'success'
        run: |
          mkdir -p ./new/
          cd ./download
          cat ../mod/GeneralBlock.txt ../mod/TiebaBlock.txt easylist.txt easylistchina.txt easyprivacy.txt cjx-annoyance.txt xinggsf-mv.txt > ../new/ad-pc.txt
          cat ../mod/GeneralBlock.txt easylist.txt easylistchina.txt easyprivacy.txt cjx-annoyance.txt > ../new/ad-mo.txt
          cat ../mod/GeneralBlock.txt ../mod/TiebaBlock.txt xinggsf-mv.txt easylistchina.txt cjxlist.txt cjx-annoyance.txt > ../new/ad.txt
          cat xinggsf-mv.txt easylistchina.txt cjxlist.txt cjx-annoyance.txt > ../new/ad2.txt
          cat xinggsf-mv.txt easylistchina.txt cjxlist.txt cjx-annoyance.txt easyprivacy.txt > ../new/ad3.txt
          cat antiadblockfilters.txt abp-filters-anti-cv.txt anti-adblock-killer-filters.txt > ../new/ad-edentw.txt
          cat easylist.txt easyprivacy.txt ublock.txt ublock2.txt ublock3.txt ublock4.txt ublock5.txt malicious.txt adguard.txt peter.txt > ../new/ublock-list.txt
          for i in $(ls ../new/*.txt); do
            sed -i '/^$/d' $i
          done

      - name: Diff and addChecksum
        id: diffResult
        if: env.status == 'success'
        run: |
          mkdir -p ./old_no_title/
          chmod +x ./mod/addChecksum.pl
          for i in $(ls ad*.txt); do
            sed '1,/^!$/d' $i > ./old_no_title/$i
          done
          diffFile="$(diff -q new/ old_no_title/ |grep -o '[a-zA-Z0-9-]\+.txt' |sort -u)"
          if [ -n "$diffFile" ]; then
            for i in $diffFile ; do
              titleName=$(echo "$i" |sed 's#.txt#-title.txt#')
              cat ./mod/$titleName ./new/$i > ./$i
              sed -i -e "s#201412030951#$TAG_NAME#" -e "s#201412030952#$MODIFIED_TIME#" ./$i
              perl ./mod/addChecksum.pl ./$i
              echo "status=success" >> $GITHUB_ENV
            done
          else
            echo "status=failed" >> $GITHUB_ENV
          fi

      - name: Deliver download Dir
        uses: actions/upload-artifact@v4
        if: env.status == 'failed'
        with:
          name: AllFiles
          path: |
            ./download/

      - name: Deliver new and old_no_title Dir
        uses: actions/upload-artifact@v4
        if: env.status == 'failed'
        with:
          name: AllFiles
          path: |
            *
            !./.git/

      - name: Git push assets to "master" branch
        continue-on-error: true
        if: env.status == 'success'
        run: |
          rm -rf download new old_no_title
          sed -i '/url =/d' ./.git/config
          git config --local user.name "actions"
          git config --local user.email "action@github.com"
          #git config --add core.compression -1
          git add --all
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote set-url --add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git fetch --unshallow origin
          git push -f -u origin master

      - name: Purge jsdelivr cache
        if: env.status == 'success'
        run: |
          result=$(curl -s https://purge.jsdelivr.net/gh/fengguowudi/list@master/)
          if echo $result |grep -q 'success.*true'; then
            echo "jsdelivr缓存更新成功"
          else
            echo $result
          fi
